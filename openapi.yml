openapi: 3.0.0

info:
  title: Formance Simple Wallets Service API
  version: 0.1.0

paths:
  /api/wallets:
    parameters:
      - name: page_size
        in: query
        description: 'The maximum number of results to return per page'
        example: 100
        schema:
          type: integer
          maximum: 1000
          minimum: 1
          default: 15
      - name: after
        in: query
        description: Pagination cursor, will return accounts after given address, in descending order.
        schema:
          type: string
          example: users:003
      - name: pagination_token
        in: query
        description: |
          Parameter used in pagination requests. Maximum page size is set to 15.
          Set to the value of next for the next page of results.
          Set to the value of previous for the previous page of results.
          No other parameters can be set when the pagination token is set.
        schema:
          type: string
          example: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==

    get:
      summary: Get all wallets
      operationId: getWallets
      tags:
        - Wallets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Wallet'
    post:
      summary: Create a new wallet
      tags:
        - Wallets
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  type: object
                  description: Custom metadata to attach to this wallet.
                  additionalProperties:
                    type: string
      responses:
        201:
          description: Wallet created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'

  /api/wallets/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get a wallet
      tags:
        - Wallets
      responses:
        200:
          description: Wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        404:
          description: Wallet not found
    patch:
      summary: Update a wallet
      tags:
        - Wallets
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  type: object
                  description: Custom metadata to attach to this wallet.
                  additionalProperties:
                    type: string
      responses:
        204:
          description: Wallet successfully updated

  /api/wallets/{id}/debit:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Debit a wallet
      tags:
        - Wallets
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  $ref: '#/components/schemas/Monetary'
                pending:
                  type: boolean
                  description: Set to true to create a pending hold. If false, the wallet will be debited immediately.
            example:
              amount:
                asset: USD/2
                amount: 100
              pending: true
      responses:
        200:
          description: Wallet successfully debited as a pending hold
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hold'
        204:
          description: Wallet successfully debited

  /api/wallets/{id}/credit:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Credit a wallet
      tags:
        - Wallets
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  $ref: '#/components/schemas/Monetary'
            example:
              amount:
                asset: USD/2
                amount: 100
      responses:
        204:
          description: Wallet successfully credited

  /api/wallets/{id}/holds:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get all holds for a wallet
      tags:
        - Wallets
      responses:
        200:
          description: Holds
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hold'

  /api/wallets/{id}/holds/{hold_id}/confirm:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: hold_id
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Confirm a hold
      tags:
        - Wallets
      responses:
        204:
          description: Hold successfully confirmed, funds moved back to initial destination

  /api/wallets/{id}/holds/{hold_id}/void:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: hold_id
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Cancel a hold
      tags:
        - Wallets
      responses:
        204:
          description: Hold successfully cancelled, funds returned to wallet

components:
  schemas:
    Monetary:
      type: object
      properties:
        asset:
          type: string
          description: The asset of the monetary value.
        amount:
          type: number
          description: The amount of the monetary value.
    Wallet:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          description: The unique ID of the wallet.
        metadata:
          type: object
          description: Metadata associated with the wallet.
        balances:
          type: object
          description: The balances of the wallet.
          additionalProperties:
            type: number
            description: The balance of the wallet in the specified currency.
    Hold:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique ID of the hold.
        wallet_id:
          type: string
          description: The ID of the wallet the hold is associated with.
        metadata:
          type: object
          description: Metadata associated with the hold.
